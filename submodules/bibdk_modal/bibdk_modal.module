<?php

include_once 'includes/bibdk_modal.commands.inc';

/**
 * Implements hook_init().
 * TODO mmj this should be deleted when all ctools modals are gone
 */
function bibdk_modal_init() {
  // Do not load modal_forms during the Drupal installation process, e.g. if part
  // of installation profiles.
  if (!drupal_installation_attempted()) {
    _bibdk_modal_forms_doheader();
  }
}

/**
 * Implements hook_menu().
 */
function bibdk_modal_menu() {
  /*$items['bibdk_modal/%ctools_js/login'] = array(
    'title' => 'Log in',
    'page callback' => 'bibdk_modal_login',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'file' => 'includes/bibdk_modal.forms.inc',
    'type' => MENU_CALLBACK,
  );*/

  $items['bibdk_modal/login'] = array(
    'title' => 'Log in',
    'page callback' => 'bibdk_modal_login',
    'access callback' => TRUE,
    'file' => 'includes/bibdk_modal.forms.inc',
    'type' => MENU_CALLBACK,
  );

  /*
  $items['bibdk_modal/%ctools_js/password'] = array(
    'title' => 'Forgot Password',
    'page callback' => 'bibdk_modal_forgot_password',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'file' => 'includes/bibdk_modal.forms.inc',
    'type' => MENU_CALLBACK,
  );
  */

  $items['bibdk_modal/forgot_password'] = array(
    'title' => 'Forgot Password',
    'page callback' => 'bibdk_modal_forgot_password',
    'access callback' => TRUE,
    'file' => 'includes/bibdk_modal.forms.inc',
    'type' => MENU_CALLBACK,
  );

  /*
  $items['bibdk_modal/%ctools_js/register'] = array(
    'title' => 'Register new user',
    'page callback' => 'bibdk_modal_register',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'file' => 'includes/bibdk_modal.forms.inc',
    'type' => MENU_CALLBACK,
  );*/

  $items['bibdk_modal/register'] = array(
    'title' => 'Register new user',
    'page callback' => 'bibdk_modal_register',
    'access callback' => TRUE,
    'file' => 'includes/bibdk_modal.forms.inc',
    'type' => MENU_CALLBACK,
  );

  $items['bibdk_modal/%ctools_js/favourite/userdata'] = array(
    'title' => 'Edit favourite library user data',
    'page callback' => 'bibdk_modal_edit_favourite_userdata_form',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'file' => 'includes/bibdk_modal.forms.inc',
    'type' => MENU_CALLBACK,
  );

  /*
  $items['bibdk_modal/%ctools_js/bibdk_favourite_list'] = array(
    'title' => 'Edit favourite library user data',
    'page callback' => 'bibdk_modal_add_to_favorites_callback',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'file' => 'includes/bibdk_modal.forms.inc',
    'type' => MENU_CALLBACK,
  );*/

  $items['bibdk_modal/bibdk_favourite_list'] = array(
    'title' => 'Edit favourite library user data',
    'page callback' => 'bibdk_modal_add_to_favorites_callback',
    'access callback' => TRUE,
    'file' => 'includes/bibdk_modal.forms.inc',
    'type' => MENU_CALLBACK,
  );

  $items['bibdk_modal/%ctools_js/voxb/review/edit'] = array(
    'title' => 'Edit review',
    'page callback' => 'bibdk_modal_review_edit_node',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'file' => 'includes/bibdk_modal.forms.inc',
    'type' => MENU_CALLBACK,
  );

  $items['bibdk_modal/%ctools_js/voxb/review/create'] = array(
    'title' => 'Edit review',
    'page callback' => 'bibdk_modal_review_create_node',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'file' => 'includes/bibdk_modal.forms.inc',
    'type' => MENU_CALLBACK,
  );

  $items['bibdk_modal/%ctools_js/voxb/offensive'] = array(
    'title' => t('report_offensive_content', array(), array('context' => 'bibdk_voxb')),
    'type' => MENU_CALLBACK,
    'access arguments' => array('search content'),
    'page callback' => 'bibdk_modal_offensive_form',
    'file' => 'includes/bibdk_modal.forms.inc',
  );

  return $items;
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Setting the #action url to point to the login-url in order to ensure correct
 * behavior by the modal form.
 * Links for creating a new user and forgot password is added to the form as
 * well.
 *
 * @param array $form
 * @param array $form_state
 * @param string $form_id
 */
function bibdk_modal_form_user_login_alter(&$form, &$form_state, $form_id) {
  if (!empty($form_state['ajax'])) {
    $form['#action'] = url('bibdk_modal/login');
    $form['actions']['modal_links'] = _bibdk_modal_get_login_form_links();
  }
}

/**
 * Generates links for forgotten password and create new user forms.
 * If we get here we assume that we're in a modal and the client have JS enabled
 * in hte browser.
 *
 * @return array $links
 */
function _bibdk_modal_get_login_form_links() {
  $items[] = l(t('Request new password', array(), array('context' => 'bibdk_modal')), 'bibdk_modal/forgot_password', array(
    'attributes' => array(
      'alt' => t('Request new password via e-mail.', array(), array('context' => 'bibdk_modal')),
      'class' => array('use-ajax', 'forgot-pword-link')
    )
  ));
  $items[] = l(t('Create new account', array(), array('context' => 'bibdk_modal')), 'bibdk_modal/register', array(
    'attributes' => array(
      'alt' => t('Create a new user account', array(), array('context' => 'bibdk_modal')),
      'class' => array('use-ajax', 'register-link')
    )
  ));

  $links = array(
    '#theme' => 'item_list',
    '#items' => $items,
    '#weight' => 10,
  );

  return $links;
}

/**
 * Configuration method. Used for loading JavaScript and CSS and setting
 * properties on the modal we're going to display
 */
function _bibdk_modal_forms_doheader() {
  //TODO mmj this method should be deleted when new modals are implemented
  static $already_added = FALSE;
  if ($already_added) {
    return; // Don't add the JavaScript and CSS multiple times.
  }

  // Include the CTools tools that we need.
  ctools_include('ajax');
  ctools_include('modal');

  //Needed to ensure ctools_ajax_command_reload() and ctools_ajax_command_redirect() works
  ctools_add_js('ajax-responder');

  // Add CTools' javascript to the page.
  ctools_modal_add_js();

  // Create our own javascript that will be used to theme a modal.
  $bibdk_modal_style = array(
    'bibdk-modal-style' => array(
      'loadingText' => t('Loading...', array(), array('context' => 'bibdk_modal')),
      'closeText' => t('Close Window', array(), array('context' => 'bibdk_modal')),
      'modalSize' => array(
        'type' => 'fixed',
        'width' => 500,
        'height' => 400,
        'minHeight' => 180,
        'addWidth' => 0,
        'addHeight' => 0,
      ),
      'modalOptions' => array(
        'opacity' => .8,
        'background-color' => '#000',
      ),
      'animation' => 'fadeIn',
      'modalTheme' => 'BibdkModal',
    ),
  );

  drupal_add_js($bibdk_modal_style, 'setting');

  ctools_add_js('bibdk_modal_theme', 'bibdk_modal');

  //Overriding part of CTools' modal.js
  ctools_add_js('bibdk_modal_resize_override', 'bibdk_modal');

  $already_added = TRUE;
}

function bibdk_modal_form_wrapper($form_id, &$form_state) {
  $form_state += array(
    're_render' => FALSE,
    'no_redirect' => !empty($form_state['ajax']),
  );

  $output = drupal_build_form($form_id, $form_state);

  // adding 'use-ajax-submit' on submit button to ensure it will be ajax processed
  if (!empty($output['actions']['submit'])) {
    $output['actions']['submit']['#attributes']['class'][] = 'use-ajax-submit';
  }

  //Adding
  if ($form_id === 'bibdk_favourite_user_form_fields') {
    $output['wrapper']['buttons']['submit']['#attributes']['class'][] = 'use-ajax-submit';
  }

  return bibdk_modal_form_render($form_state, $output);
}

/**
 * Render a form into an AJAX display.
 *
 * If there are messages for the form, render them.
 * If the form has been executed the messages will be shown on the page after
 * reload.
 *
 * @param array $form_state
 * @param array $output
 * @return string
 */
function bibdk_modal_form_render($form_state, $output) {
  if (is_array($output)) {
    $output = drupal_render($output);
  }

  $title = empty($form_state['title']) ? drupal_get_title() : $form_state['title'];

  if (empty($form_state['executed'])) {
    $messages = theme('status_messages');
    $output = $messages . $output;
    drupal_get_messages();
  }

  //TODO mmj this should maybe be provided by some template or so...
  return '<div id="bibdk-modal-form">' . $output . '<a class="close-reveal-modal">&#215;</a></div>';
}
