<?php

/**
 * @file
 * Code for the bibdk_article feature.
 */
include_once 'bibdk_article.features.inc';

/*
 * Implements hook_block_info
 */

function bibdk_article_block_info() {

  $blocks['bibdk_articles'] = array(
    'info' => t('Bibdk Article Frontpage teaser'),
  );

  return $blocks;
}

/*
 * Implements hook_block_view
 */

function bibdk_article_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'bibdk_articles':
      if (user_access('access content')) {
        $block['subject'] = t('Recent content');
        if ($articles = bibdk_article_get_rendered_articles()) {
          $block['content'] = array(
            '#theme' => 'bibdk_article_frontpage',
            '#items' => $articles,
          );
        }
        else {
          $block['content'] = t('No content available.');
        }
      }
      break;
  }
  return $block;
}

function bibdk_article_get_rendered_articles() {
  $article_values = bibdk_article_get_article_values();
  // datacheck
  if (empty($article_values)) {
    return;
  }
  
  $rendered_articles = array();
  //insert bibdk_helpdesk FIRST in array
  $rendered_articles[0] = bibdk_article_render_helpdesk();

  foreach ($article_values as $article_value) {
    $article = bibdk_article_set_column($article_value);
    $rendered_articles[key($article)][] = theme('bibdk_articles_block_widget',current($article));
  }
  // default sort by key (weight)  
  ksort($rendered_articles);
  return $rendered_articles;
}


function bibdk_article_render_helpdesk(){
  if (module_exists('bibdk_helpdesk')) {    
    $block = module_invoke('bibdk_helpdesk','block_view','bibdk-helpdesk-teaser');
    return array(0 => $block['content']);
  }
}

/** set a single article
 *
 * @param  array bibdk_article entity from database
 * @return array (column number  => article)
 */
function bibdk_article_set_column($value) {
  $columns = $value['field_layout_columns']['#items'][0]['value'];
  $rows = $value['field_layout_rows']['#items'][0]['value'];
  $color = isset($value['field_bibdk_article_color']['#items'][0]['value']) ? $value['field_bibdk_article_color']['#items'][0]['value'] : 'light-grey';
  $classes = bibdk_article_get_classes ($columns,$rows,$color);
  $weight = isset($value['field_bibdk_article_weight']['#items'][0]['value']) ? $value['field_bibdk_article_weight']['#items'][0]['value'] : 1;
  $item = array(
    'title' => $value['title'],
    'body' => drupal_render($value['body']),
    'link' => $value['field_bibdk_article_link']['#items'][0]['value'], //drupal_render($value['field_bibdk_article_link']),
    'link_text' => $value['field_bibdk_article_link_text']['#items'][0]['value'], //drupal_render($value['field_bibdk_articfle_link_text']),
    'image' => drupal_render($value['field_bibdk_article_image']),
    'class' => $classes['height'],
    'rows' => $value['field_layout_rows']['#items'][0]['value'],
    'span' => $classes['width'],
  );  

  return array($weight => $item);
}

/*
 * Implements hook_block_configure
 */

function bibdk_article_block_configure($delta = '') {
  
}

/*
 * Implements hook_theme
 */
/*
 * Implements hook_theme
 */

function bibdk_article_theme() {
  $themes = array(
    'bibdk_articles_block' => array(
      'variables' => array('articles' => NULL),
      'template' => 'theme/bibdk-articles-block'
    ),
    'bibdk_articles_block_widget' => array(
      'variables' => array(
        'title' => NULL,
        'body' => NULL,
        'link' => NULL,
        'class' => NULL,
        'rows' => NULL,
        'span' => NULL,
      ),
      'template' => 'theme/bibdk-articles-block-widget'
    ),
    'bibdk_article_frontpage' => array(
      'variables' => array(
        'title' => '',
        'items' => array(),
      ),
      'template' => 'theme/bibdk_article_frontpage',
    ),
  );
  return $themes;
}

/*
 * Fetch nodes of type bibdk_article from db
 */

function bibdk_article_get_article_values() {
  //http://api.drupal.org/api/drupal/includes%21common.inc/function/entity_load/7
  $columns = array();
  $query = new EntityFieldQuery();

  $query
      ->entityCondition('entity_type', 'node', '=')
      ->propertyCondition('type', 'bibdk_article', '=')
      ->propertyCondition('status', '1', '=')
      ->propertyOrderBy('changed', 'DESC');

  $result = $query->execute();

  if (!isset($result['node']))
    return;

  $articles = node_load_multiple(array_keys($result['node']));
  $article_fields = field_info_instances('node', 'bibdk_article');

  $values = array();
  foreach ($articles as $article) {
    $value = array();
    foreach ($article_fields as $name => $field) {
      $value[$name] = field_view_field('node', $article, $name);
      $value['title'] = $article->title;
    }
    $values[] = $value;
  }
  return $values;
}
/*
 * Add necessary classes for bibdk_theme
 */

function bibdk_article_get_classes($columns, $rows, $color) {
  $classes = array(
    'width' => 'span'.(3*$columns),
    'height' => 'widget-'.$color. ' widget-height-' . $rows,
  );
  return $classes;
}