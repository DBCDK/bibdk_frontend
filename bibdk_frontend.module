<?php

/**
 * Implements hook_user_login().
 */
function bibdk_frontend_user_login(&$edit, $account) {
  if (!isset($edit['uid'])) {
    return;
  }

  // go to user page on first time login
  if (isset($edit['input']['firsttime'])) {
    // we KNOE that login succeeded - or we wouldn't be here
    // unset messages
    drupal_get_messages();
    // set a welcome message
    drupal_set_message(_bibdk_frontend_welcome_message());
    // remind user to add favourites
    drupal_set_message(_bibdk_frontend_remember_favourites_message());
    if (module_exists('bibdk_mypage')) {
      drupal_goto('user/' . $account->uid . '/edit/bibdk_mypage');
    }
    else {
      drupal_goto('user');
    }
  }
  elseif( !isset($_POST['form_id'])  ){
    drupal_goto('');
  }
  // do NOT redirect on password reset
  elseif ( !isset($_GET['pass-reset-token']) && $_POST['form_id'] != 'user_pass_reset' )  {
    // go to frontpage on normal login
    drupal_goto('');
  }
}

/**
 * Implements hook_l10n_update_projects_alter().
 * @see l10n_update.api.php
 * @param $projects
 */
function bibdk_frontend_l10n_update_projects_alter(&$projects) {
  $projects['bibliotekdk'] = array(
    'project_type'  => 'module',
    'name' => 'bibliotekdk',
    'info' => array(
      'version' => '7.x-0.1',
      'core' => '7.x',
      'l10n server' => 'dringo2.ding.dbc.dk',
      'l10n url' => 'http://dringo2.ding.dbc.dk/sites/default/files/l10n_packager/l10n_server.xml',
      'l10n path' => 'http://dringo2.ding.dbc.dk/sites/default/files/l10n_packager/7.x/bibliotekdk/bibliotekdk-7.x-0.1.%language.po',
    ),
  );
}


function _bibdk_frontend_remember_favourites_message() {
  $link = l(t('add_favourites'), 'vejviser');
  return t('remember_to_add_favourite_libraries') . ' ' . $link;
}

function _bibdk_frontend_welcome_message() {
  return t('Welcome', array(), array('context' => 'bibdk_provider'));
}

/**
 * Implements hook_ctools_plugin_api().
 */
function bibdk_frontend_ctools_plugin_api() {
  list($module, $api) = func_get_args();
  if ($module == "page_manager" && $api == "pages_default") {
    return array("version" => "1");
  }
}

/**
 * Implementation of hook_default_page_manager_pages().
 */
function bibdk_frontend_default_page_manager_pages() {
  $pages = array();
  $path = drupal_get_path('module', 'bibdk_frontend') . '/pages';
  $files = drupal_system_listing('/\.inc$/', $path, 'name', 0);
  foreach ($files as $file) {
    include_once $file->uri;
    $pages[$page->name] = $page;
  }
  return $pages;
}

/**
 * Implements hook_block_info().
 */
function bibdk_frontend_block_info() {
  $blocks['bibdk_tabs'] = array(
    'info' => t('Bibdk: tabs'),
    'description' => t('sidebar tab menu_local_tabs'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function bibdk_frontend_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'bibdk_tabs':
      $block['content'] = menu_local_tabs();
      if (is_array($block['content']['#secondary'])) {
        foreach ($block['content']['#secondary'] as $n => $tab) {
          $block['content']['#secondary'][$n]['#link']['title'] = t($tab['#link']['title'], array(), array('context' => 'bibdk_frontend'));
          $block['content']['#secondary'][$n]['#link']['localized_options']['attributes']['id'][] = drupal_html_id('selid-tabs-' . $block['content']['#secondary'][$n]['#link']['title']);
        }
      }
      drupal_alter('bibdk_tabs', $block);
      break;
  }

  //unset primary tab
  if (isset($block['content']['#primary'])) {
    unset($block['content']['#primary']);
  }
  return $block;
}

function bibdk_frontend_bibdk_tabs_alter(&$data) {
  if (!empty($data['content']['#secondary'])) {
    foreach ($data['content']['#secondary'] as $key => $tab) {
      if ($tab['#link']['path'] == 'user/%/edit/bibdk_mypage') { // bibdk_mypage profile tab
        $data['content']['#bibdk_mypage_tab'] = $tab;
        unset($data['content']['#secondary'][$key]);
      }
    }
  }
}

function bibdk_frontend_block_view_alter(&$data, $block) {
  if ($block->delta == 'menu-global-login-menu') {
    foreach ($data['content'] as $key => $value) {
      if (isset($value['#title'])) {
        $data['content'][$key]['#title'] = t($value['#title'], array(), array('context' => 'bibdk_frontend'));
      }
    }
  }
}

/** Implements hook_form_FORM_ID_alter (profile2_form)
 * remove account settings
 * unset action region
 */
function bibdk_frontend_form_profile2_form_alter(&$form, &$form_state) {
  unset($form['account']);
  unset($form['actions']);
}

/**
 * Implements hook_menu().
 */
function bibdk_frontend_menu() {

  $items = array();

  $forms = array('all_element_types', 'all_inline_element_types');

  foreach ($forms as $form) {
    $items['bibdk_forms/' . $form] = array(
      'title' => t($form),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('bibdk_form_callback_' . $form),
      'access callback' => 'user_access',
      'access arguments' => array('access developer information'),
      'file' => 'bibdk_forms.inc',
      'type' => MENU_NORMAL_ITEM,
    );
  }

  return $items;
}



/**
 * Implementation of hook_form_alter().
 *
 * Update the page action : add destination parameter in order to return to referrer.
 *
 * @param &$form
 * @param $form_state
 * @param $form_id
 * @return
 *   Return the structure of the form.
 */
function bibdk_frontend_form_user_login_alter(&$form, $form_state, $form_id) {
  $form['#action'] = url('user/login', array('query' => array('destination' => ( isset($_SESSION['referrer'])) ? $_SESSION['referrer'] : '' )));
}
function bibdk_frontend_form_user_login_block_alter(&$form, $form_state, $form_id) {
  $form['#action'] = url('user/login', array('query' => array('destination' =>  ( isset($_SESSION['referrer'])) ? $_SESSION['referrer'] : '' )));
}


/**
 * Implements hook_exit().
 *
 * Saves the path a user visited on page exit.
 */
function bibdk_frontend_exit() {
  // drupal is not fulle bootstrapped on cached pages 
  // @see https://drupal.org/node/2060613
  // Do not continue if not fully bootstrapped.
 /* if (drupal_get_bootstrap_phase() < DRUPAL_BOOTSTRAP_FULL) {
    return;
  }*/
  
  //$path = drupal_get_path_alias();
  $path = current_path();
  if ( (strpos($path, 'search/') === 0 || strpos($path, 'vejviser') === 0) || ( strpos($path, 'user/') === 0  && $path != 'user/login' && $path != 'user/logout' ) ) {
      $_SESSION['referrer'] = current_path().'?'.drupal_http_build_query($_GET);
  }
}
